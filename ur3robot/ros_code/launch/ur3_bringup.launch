<launch>

<param name="/use_sim_time" value="false"/>

<!-- params -->
<param name="robot_description" command="cat $(find ur3robot)/urdf/robot.urdf" />
<arg name="move_forward_only" default="false"/>

<!-- URDF Publisher -->
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
   <!--  <param name="source_list" value="[/kinect/tilt/joint_states]" /> -->
    <rosparam param="source_list">["/kinect/tilt/joint_states"]</rosparam>
    <param name="rate" value="50" />
</node>

<node name="mpu_node" pkg="mpu6050_driver" type="mpu6050_node" output="screen">
    <rosparam file="$(find ur3robot)/param/imu/mpu_settings.yaml" command="load"/>
</node>

<!-- start teensy serial -->

<node name="teensy_serial" pkg="rosserial_python" type="serial_node.py" output="screen">
		<param name="port" value="/dev/ttyACM0"/>
		<param name="baud" value="115200"/>
</node>

<!--
<node name="rosserial_python_message" type="message_info_service.py" pkg="rosserial_python" output="screen">
</node> 

<node name="teensy_serial" pkg="rosserial_server" type="serial_node" output="screen">
		<param name="port" value="/dev/ttyACM0"/>
		<param name="baud" value="115200"/>
</node>
-->

<node name="rosserial_python_message" type="message_info_service.py" pkg="rosserial_python" output="screen">
</node> 

<node name="teensy_serial_two" pkg="rosserial_server" type="serial_node" output="screen">
		<param name="port" value="/dev/ttyACM1"/>
		<param name="baud" value="115200"/>
</node>
<!-- 
<node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    <rosparam command="load" file="$(find ur3robot)/param/ekf/ekf_params.yaml" />
</node>
-->

<!-- Map server -->
<node pkg="map_server" name="map_server" type="map_server" args="$(find ur3robot)/robot_map/map.yaml"/>

<!-- rplidar -->
<include file="$(find rplidar_ros)/launch/rplidar_a1.launch" />

<!-- start cpp python laser filter -->
<node name="laser_filter_node" type="laser_filter_node" pkg="ur3robot" output="screen">
</node> 

<!-- start the laser scan matcher which is a 3rd source of odom for ekf NOT USING -->
<!-- 
<include file="$(find ur3robot)/launch/laser_matcher.launch" />
-->

<!-- AMCL -->
<include file="$(find ur3robot)/launch/amcl.launch"/>

<!-- move_base -->
<include file="$(find ur3robot)/launch/move_base.launch">
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
</include>

<!--  Webcam  -->
<include file="$(find ur3robot)/launch/stream_webcam.launch" />

<!--  kinect  -->
<!-- 
<include file="$(find ur3robot)/launch/freenect.launch" />
-->

<!-- kinect aux-->
<!-- 
<node name="kinect_aux" type="kinect_aux_node" pkg="ur3robot" output="screen">
    <remap from="imu" to="kinect/imu"/>
    <remap from="tilt_angle" to="kinect/tilt_angle"/>
    <remap from="led_option" to="kinect/led_option"/>
    <remap from="cur_tilt_angle" to="kinect/cur_tilt_angle"/>
    <remap from="cur_tilt_status" to="kinect/cur_tilt_status"/>
    <remap from="joint_states" to="kinect/tilt/joint_states"/>

    <param name="max_tilt_angle" value="18"/>
	<param name="min_tilt_angle" value="-44"/>
    <param name="pub_tf" value="false"/>
    <param name="pub_joint_state" value="true"/>
	<param name="use_imu_for_angle" value="false"/>
    <param name="init_tilt_angle" value="-20"/>
    <param name="pivot_joint_name" value="kinect_base_to_camera_link" />
</node>
-->

<!-- pointcloud to laserscan -->
<!-- <include file="$(find ur3robot)/launch/pointcloud_to_laserscan.launch"/> -->


</launch>
